local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "XYLO AUTOFARM",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "XYLO AUTOFARM CITY BUS",
   LoadingSubtitle = "Dev version",
   ShowText = "XYLO Dev HUB", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "c5uVTcHtzJ", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "XYLO TEST VERSION",
      Subtitle = "Key System",
      Note = "TEST KEY IN https://discord.gg/c5uVTcHtzJ", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"XYLOHUBTEST123VERSION"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local DevTab = Window:CreateTab("Developer", nil) -- Title, Image
local Section = DevTab:CreateSection("Main")

local TweenService = game:GetService("TweenService")

local bus = workspace:WaitForChild("Fndkdndiddn")
local seat = bus:WaitForChild("DriveSeat")

-- Punkte, die abgeflogen werden
local points = {
    Vector3.new(-518.2562, 10.1831, 829.0701),
    Vector3.new(112, 10, 1612),
}

-- Prim√§rteil setzen, falls noch nicht gesetzt
if not bus.PrimaryPart then
    bus.PrimaryPart = seat
end

local flying = false
local autofarmThread

local function tweenTo(targetPosition)
    local distance = (bus.PrimaryPart.Position - targetPosition).Magnitude
    local tweenTime = distance / 90

    local tweenInfo = TweenInfo.new(
        tweenTime,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.InOut
    )

    local tween = TweenService:Create(bus.PrimaryPart, tweenInfo, {
        CFrame = CFrame.new(targetPosition)
    })
    tween:Play()
    tween.Completed:Wait()
end

-- Rayfield-Toggle
local Toggle = Section:CreateToggle({ 
    Name = "Autofarm CB", 
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        flying = Value

        if flying then
            autofarmThread = task.spawn(function()
                while flying do
                    for _, pos in ipairs(points) do
                        if not flying then break end
                        tweenTo(pos)
                        task.wait(0.1)
                    end
                end
            end)
        else
            if autofarmThread then
                task.cancel(autofarmThread)
                autofarmThread = nil
            end
        end
    end,
})
