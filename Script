local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "XYLO AUTOFARM",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "XYLO AUTOFARM CITY BUS",
   LoadingSubtitle = "Dev version",
   ShowText = "XYLO Dev HUB", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "c5uVTcHtzJ", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "XYLO TEST VERSION",
      Subtitle = "Key System",
      Note = "TEST KEY IN https://discord.gg/c5uVTcHtzJ", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"XYLOHUBTEST123VERSION"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local DevTab = Window:CreateTab("Developer", nil) -- Title, Image
local Section = DevTab:CreateSection("Main")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

local Toggle = DevTab:CreateToggle({
    Name = "AUTOFARM",
    CurrentValue = false,
    Flag = "AFCB",
    Callback = function(Value)
        if not Value then return end

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local hrp = character:WaitForChild("HumanoidRootPart")

        local function vec(x, y, z)
            return Vector3.new(x, y, z)
        end

        local function noclip(enable)
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = not enable
                end
            end
        end

        local function smoothWalk(destination)
            local moveSpeed = 18
            humanoid.WalkSpeed = moveSpeed
            noclip(true)
            humanoid:MoveTo(destination)
            repeat
                humanoid:MoveTo(destination)
                RunService.Heartbeat:Wait()
            until (hrp.Position - destination).Magnitude < 3
            noclip(false)
            task.wait(0.3)
        end

        local function moveBusNatural(busModel, targetPos, duration)
            local root = busModel:FindFirstChild("DriveSeat")
            if not root then return end

            -- BodyVelocity & BodyGyro erzeugen oder wiederverwenden
            local bv = root:FindFirstChild("BodyVelocity") or Instance.new("BodyVelocity")
            bv.MaxForce = Vector3.new(1e5, 0, 1e5)
            bv.Parent = root

            local bg = root:FindFirstChild("BodyGyro") or Instance.new("BodyGyro")
            bg.MaxTorque = Vector3.new(0, 1e5, 0)
            bg.Parent = root

            local startPos = root.Position
            local startTime = tick()

            while tick() - startTime < duration do
                local alpha = (tick() - startTime) / duration
                local desiredPos = startPos:Lerp(targetPos, alpha)

                local direction = (desiredPos - root.Position)
                -- Geschwindigkeit proportional zur Distanz
                local velocity = Vector3.new(direction.X, 0, direction.Z) / RunService.Heartbeat:Wait()

                -- Begrenze die Geschwindigkeit, damit es nicht ruckelt
                local maxSpeed = 30
                if velocity.Magnitude > maxSpeed then
                    velocity = velocity.Unit * maxSpeed
                end

                bv.Velocity = velocity

                if direction.Magnitude > 0.1 then
                    local lookCFrame = CFrame.new(Vector3.new(), Vector3.new(direction.X, 0, direction.Z))
                    bg.CFrame = CFrame.new(root.Position) * lookCFrame
                end

                RunService.Heartbeat:Wait()
            end

            bv:Destroy()
            bg:Destroy()

            -- Final Position setzen
            root.CFrame = CFrame.new(targetPos, targetPos + Vector3.new(0, 0, 1))
        end

        -- Start Autofarm Abläufe

        smoothWalk(vec(-1731, 6, -1281)) -- NPC
        task.wait(0.5)
        ReplicatedStorage.Bnl["69141aa3-8c6a-4eee-ab58-c7805873c0ee"]:FireServer()
        task.wait(0.5)
        ReplicatedStorage.Bnl["aeb8d87a-20a0-48e5-8249-ddf516b4dbe8"]:FireServer("City Bus Driver")
        task.wait(0.5)
        ReplicatedStorage.Bnl["69141aa3-8c6a-4eee-ab58-c7805873c0ee"]:FireServer()
        task.wait(0.5)

        smoothWalk(vec(-1723, 6, -1266)) -- Schlüssel
        task.wait(0.5)
        ReplicatedStorage.Bnl["e8f3d225-1be6-487b-9572-36254957b902"]:FireServer("Mercedes Citaro Bus Driver")
        task.wait(0.5)

        smoothWalk(vec(-1735, 5, -1259)) -- Bus
        task.wait(1.5)

        local bus = Workspace.Vehicles:WaitForChild("Fndkdndiddn")
        local seat = bus:WaitForChild("DriveSeat")

        ReplicatedStorage.Bnl["fdffc7c3-4c83-4693-8a33-380ed2d60083"]:FireServer(seat, "Oj2", false)
        task.wait(0.5)

        ReplicatedStorage.Bnl["1109ee8f-65c5-435b-9ad7-e13b83f79aeb"]:FireServer(bus, true)
        task.wait(0.5)

        -- Bus realistisch bewegen
        moveBusNatural(bus, vec(-1723, 60, -1266), 10)
        task.wait(2)
        moveBusNatural(bus, vec(-510, 60, 831), 10)
        task.wait(2)
        moveBusNatural(bus, vec(-510, 10, 831), 10)
        task.wait(2)
        moveBusNatural(bus, vec(-510, 60, 831), 10)
        task.wait(2)
        moveBusNatural(bus, vec(112, 60, 1612), 10)
        task.wait(2)
        moveBusNatural(bus, vec(112, 10, 1612), 10)

        Toggle:Set(false)
    end,
})









